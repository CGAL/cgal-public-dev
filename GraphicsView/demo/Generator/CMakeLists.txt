# This is the CMake script for compiling a CGAL application.

cmake_minimum_required(VERSION 3.1...3.23)
project(Generator_Demo)

if(NOT POLICY CMP0070 AND POLICY CMP0053)
  # Only set CMP0053 to OLD with CMake<3.10, otherwise there is a warning.
  cmake_policy(SET CMP0053 OLD)
endif()

if(POLICY CMP0071)
  cmake_policy(SET CMP0071 NEW)
endif()

find_package(CGAL REQUIRED OPTIONAL_COMPONENTS Qt6)

find_package(Qt6 QUIET COMPONENTS Widgets OpenGLWidgets)

if(CGAL_Qt6_FOUND AND Qt6_FOUND)

  add_definitions(-DQT_NO_KEYWORDS)
  set(CMAKE_INCLUDE_CURRENT_DIR ON)
  set(CMAKE_AUTOMOC ON)

  # UI files (Qt Designer files)
  qt6_wrap_ui(DT_UI_FILES Generator_2.ui)

  # qrc files (resources files, that contain icons, at least)
  qt6_add_resources(CGAL_Qt6_RESOURCE_FILES ./Generator_2.qrc)

  # use the Qt MOC preprocessor on classes that derives from QObject

  # The executable itself.
  add_executable(Generator_2 Generator_2.cpp ${DT_UI_FILES}
                             ${CGAL_Qt6_RESOURCE_FILES} ${CGAL_Qt6_MOC_FILES})

  add_to_cached_list(CGAL_EXECUTABLE_TARGETS Generator_2)

  target_link_libraries(Generator_2 PRIVATE CGAL::CGAL CGAL::CGAL_Qt6 Qt6::Widgets)

  include(${CGAL_MODULES_DIR}/CGAL_add_test.cmake)
  cgal_add_compilation_test(Generator_2)
else()

  message("NOTICE: This demo requires CGAL and Qt6, and will not be compiled.")

endif()

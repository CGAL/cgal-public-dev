namespace CGAL {
/*!

\mainpage User Manual
\anchor Chapter_SetMovableSeparability3

\cgalAutoToc
\authors Shahar Shamai and Efi Fogel

\section sms_3_sec_intro Introduction

<em>Movable Separability of Sets</em> \cgalCite{t-mss-85} is a class
of problems that deal with moving sets of objects; the challenge is to
avoid collisions between the objects while considering different kinds
of motions and various definitions of separation.  Problems of moving
sets of objects, such as polyhedra in three dimensions, without
allowing collisions between the objects are ubiquitous in many fields
including motion planning, computer graphics, VLSI layout,
manufacturing, and assembly planning. The latter is the problem of
finding a sequence of motions that move the initially separated parts
of an assembly to form the assembled product. (The reverse order of
motions separates an assembled product to its parts.) For example, It
had been conjectured that every assembly \f$A\f$ of convex
sub-assemblies in 3-space that are pairwise disjoint in their
interiors can be taken apart by translation with two hands; that is,
some proper subset of \f$A\f$ can be translated to infinity without
colliding with its complement.  In 1993 Snoeyink and
Stolfi\cgalCite{ss-otcbt-93} disputed the conjection above. They
actually provided an assembly (see \cgalFigureRef{sms_3_fig_twist})
that cannot be taken apart with two hands using arbitrary rigid
motions. The problem of finding a sequence of motions that partitions
an assembly, as all other problems in the class of <em>Movable
Separability of Sets in 3-space</em>, become progressively more
challenging as the allowable separation motions becomes more complex
(have more degrees of freedom), the number of objects involved grows,
or the shape of the objects becomes more complicated.

\cgalFigureBegin{sms_3_fig_twist,twist.png} An assembly that cannot be
taken apart with two hands using arbitrary rigid motions.
\cgalFigureEnd

At this point this package provides solutions to one subclass of
problems related to 3D castings. In particular, each of these
solutions handles a single moving polyhedron and a single stationary
polyhedron, and considers a single translation of the moving polygon.

\section sms_3_sec_casting Casting

Casting is a manufacturing process where liquid material is poured
into a cavity inside a mold, which has the shape of a desired
product. (The mold can take any shape and form as long as it has a
cavity of the desired shape.) After the material solidifies, the
product is pulled out of the mold. Typically a mold is used to
manufacture numerous copies of a product. The challenge is designing a
proper mold, such that the solidified product can be separated from
its mold without breaking it.

This package provides a function called
`CGAL::Set_movable_separability_2::Single_mold_translational_casting::top_facets()`
that, given a simple closed polyhedron \f$P\f$, determines whether a
cavity (of a mold in 3-space) that has the shape of \f$P\f$ can be
used so that the polyhedron \f$P\f$ could be pulled out of the mold
without colliding into the mold (but possibly sliding along the mold
surface); see \cgalFigureRef{sms_3_fig_mold} for an illustration. In
reality, the mold of a <em>castable</em> polyhedron must be rotated
before the polyhedron is casted, such that one facet becomes parallel
to the \f$xy\f$-plane and is located above all other facets; such a
facet is referred to as a <em>top facet</em>. A polyhedron (in
3-space) may have up to six facets that can serve as top facets. If
the polyhedron is <em>castable</em>, the function computes the set of
top facets of such cavities and the corresponding closed regions of
pullout directions in 3-space.

\cgalFigureBegin{sms_3_fig_mold,object.png,mold.gif}
Polygons (light grey) in their molds (darker grey) and valid pull-out
directions.
\cgalFigureEnd

The input polyhedron must satisfy two conditions as follows. First, it
has to be simple. Essentially, a simple polyhedron is topologically
equivalent to a sphere and the facets of which are simple polygons;
see Chapter \ref PkgBooleanSetOperations2 for the precise definition of
simple polygons. Secondly, any consecutive three vertices cannot be
collinear. If you suspect that the input polygon may not satisfy the
latter condition, pre-process the polygon to elliminate this
ill-condition.

The implementation is based on an algorithm developed by Shamai and
Halperin; see \cgalCite{cgal:ss-spfis-16}. The time and space
complexities are in \f$O(n)\f$ and \f$O(1)\f$, respectively. In order
to ensure robustness and correctness you must use a kernel that
guarantees exact constructions as well as exact predicates, e,g,.
`Exact_predicates_exact_constructions_kernel`.

The following example computes the top facets and their pullout
directions of an input polyhedron read from a file and reports the results.

\cgalExample{Set_movable_separability_3/top_facets_single_mold_translational_casting.cpp}

*/
} /* namespace CGAL */
